/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ProjectsImport } from "./routes/projects";
import { Route as DemoImport } from "./routes/demo";
import { Route as IndexImport } from "./routes/index";
import { Route as ProjectsMinesweeperImport } from "./routes/projects/minesweeper";
import { Route as ProjectsLumberjackImport } from "./routes/projects/lumberjack";
import { Route as ProjectsGoblinScribeImport } from "./routes/projects/goblin-scribe";
import { Route as ProjectsAppraiseCsvParseImport } from "./routes/projects/appraise-csv-parse";
import { Route as DemoAnimationWrapperImport } from "./routes/demo/animation-wrapper";

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: "/projects",
  path: "/projects",
  getParentRoute: () => rootRoute,
} as any);

const DemoRoute = DemoImport.update({
  id: "/demo",
  path: "/demo",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ProjectsMinesweeperRoute = ProjectsMinesweeperImport.update({
  id: "/minesweeper",
  path: "/minesweeper",
  getParentRoute: () => ProjectsRoute,
} as any);

const ProjectsLumberjackRoute = ProjectsLumberjackImport.update({
  id: "/lumberjack",
  path: "/lumberjack",
  getParentRoute: () => ProjectsRoute,
} as any);

const ProjectsGoblinScribeRoute = ProjectsGoblinScribeImport.update({
  id: "/goblin-scribe",
  path: "/goblin-scribe",
  getParentRoute: () => ProjectsRoute,
} as any);

const ProjectsAppraiseCsvParseRoute = ProjectsAppraiseCsvParseImport.update({
  id: "/appraise-csv-parse",
  path: "/appraise-csv-parse",
  getParentRoute: () => ProjectsRoute,
} as any);

const DemoAnimationWrapperRoute = DemoAnimationWrapperImport.update({
  id: "/animation-wrapper",
  path: "/animation-wrapper",
  getParentRoute: () => DemoRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/demo": {
      id: "/demo";
      path: "/demo";
      fullPath: "/demo";
      preLoaderRoute: typeof DemoImport;
      parentRoute: typeof rootRoute;
    };
    "/projects": {
      id: "/projects";
      path: "/projects";
      fullPath: "/projects";
      preLoaderRoute: typeof ProjectsImport;
      parentRoute: typeof rootRoute;
    };
    "/demo/animation-wrapper": {
      id: "/demo/animation-wrapper";
      path: "/animation-wrapper";
      fullPath: "/demo/animation-wrapper";
      preLoaderRoute: typeof DemoAnimationWrapperImport;
      parentRoute: typeof DemoImport;
    };
    "/projects/appraise-csv-parse": {
      id: "/projects/appraise-csv-parse";
      path: "/appraise-csv-parse";
      fullPath: "/projects/appraise-csv-parse";
      preLoaderRoute: typeof ProjectsAppraiseCsvParseImport;
      parentRoute: typeof ProjectsImport;
    };
    "/projects/goblin-scribe": {
      id: "/projects/goblin-scribe";
      path: "/goblin-scribe";
      fullPath: "/projects/goblin-scribe";
      preLoaderRoute: typeof ProjectsGoblinScribeImport;
      parentRoute: typeof ProjectsImport;
    };
    "/projects/lumberjack": {
      id: "/projects/lumberjack";
      path: "/lumberjack";
      fullPath: "/projects/lumberjack";
      preLoaderRoute: typeof ProjectsLumberjackImport;
      parentRoute: typeof ProjectsImport;
    };
    "/projects/minesweeper": {
      id: "/projects/minesweeper";
      path: "/minesweeper";
      fullPath: "/projects/minesweeper";
      preLoaderRoute: typeof ProjectsMinesweeperImport;
      parentRoute: typeof ProjectsImport;
    };
  }
}

// Create and export the route tree

interface DemoRouteChildren {
  DemoAnimationWrapperRoute: typeof DemoAnimationWrapperRoute;
}

const DemoRouteChildren: DemoRouteChildren = {
  DemoAnimationWrapperRoute: DemoAnimationWrapperRoute,
};

const DemoRouteWithChildren = DemoRoute._addFileChildren(DemoRouteChildren);

interface ProjectsRouteChildren {
  ProjectsAppraiseCsvParseRoute: typeof ProjectsAppraiseCsvParseRoute;
  ProjectsGoblinScribeRoute: typeof ProjectsGoblinScribeRoute;
  ProjectsLumberjackRoute: typeof ProjectsLumberjackRoute;
  ProjectsMinesweeperRoute: typeof ProjectsMinesweeperRoute;
}

const ProjectsRouteChildren: ProjectsRouteChildren = {
  ProjectsAppraiseCsvParseRoute: ProjectsAppraiseCsvParseRoute,
  ProjectsGoblinScribeRoute: ProjectsGoblinScribeRoute,
  ProjectsLumberjackRoute: ProjectsLumberjackRoute,
  ProjectsMinesweeperRoute: ProjectsMinesweeperRoute,
};

const ProjectsRouteWithChildren = ProjectsRoute._addFileChildren(
  ProjectsRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/demo": typeof DemoRouteWithChildren;
  "/projects": typeof ProjectsRouteWithChildren;
  "/demo/animation-wrapper": typeof DemoAnimationWrapperRoute;
  "/projects/appraise-csv-parse": typeof ProjectsAppraiseCsvParseRoute;
  "/projects/goblin-scribe": typeof ProjectsGoblinScribeRoute;
  "/projects/lumberjack": typeof ProjectsLumberjackRoute;
  "/projects/minesweeper": typeof ProjectsMinesweeperRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/demo": typeof DemoRouteWithChildren;
  "/projects": typeof ProjectsRouteWithChildren;
  "/demo/animation-wrapper": typeof DemoAnimationWrapperRoute;
  "/projects/appraise-csv-parse": typeof ProjectsAppraiseCsvParseRoute;
  "/projects/goblin-scribe": typeof ProjectsGoblinScribeRoute;
  "/projects/lumberjack": typeof ProjectsLumberjackRoute;
  "/projects/minesweeper": typeof ProjectsMinesweeperRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/demo": typeof DemoRouteWithChildren;
  "/projects": typeof ProjectsRouteWithChildren;
  "/demo/animation-wrapper": typeof DemoAnimationWrapperRoute;
  "/projects/appraise-csv-parse": typeof ProjectsAppraiseCsvParseRoute;
  "/projects/goblin-scribe": typeof ProjectsGoblinScribeRoute;
  "/projects/lumberjack": typeof ProjectsLumberjackRoute;
  "/projects/minesweeper": typeof ProjectsMinesweeperRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/demo"
    | "/projects"
    | "/demo/animation-wrapper"
    | "/projects/appraise-csv-parse"
    | "/projects/goblin-scribe"
    | "/projects/lumberjack"
    | "/projects/minesweeper";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/demo"
    | "/projects"
    | "/demo/animation-wrapper"
    | "/projects/appraise-csv-parse"
    | "/projects/goblin-scribe"
    | "/projects/lumberjack"
    | "/projects/minesweeper";
  id:
    | "__root__"
    | "/"
    | "/demo"
    | "/projects"
    | "/demo/animation-wrapper"
    | "/projects/appraise-csv-parse"
    | "/projects/goblin-scribe"
    | "/projects/lumberjack"
    | "/projects/minesweeper";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  DemoRoute: typeof DemoRouteWithChildren;
  ProjectsRoute: typeof ProjectsRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoRoute: DemoRouteWithChildren,
  ProjectsRoute: ProjectsRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/demo",
        "/projects"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/demo": {
      "filePath": "demo.tsx",
      "children": [
        "/demo/animation-wrapper"
      ]
    },
    "/projects": {
      "filePath": "projects.tsx",
      "children": [
        "/projects/appraise-csv-parse",
        "/projects/goblin-scribe",
        "/projects/lumberjack",
        "/projects/minesweeper"
      ]
    },
    "/demo/animation-wrapper": {
      "filePath": "demo/animation-wrapper.tsx",
      "parent": "/demo"
    },
    "/projects/appraise-csv-parse": {
      "filePath": "projects/appraise-csv-parse.tsx",
      "parent": "/projects"
    },
    "/projects/goblin-scribe": {
      "filePath": "projects/goblin-scribe.tsx",
      "parent": "/projects"
    },
    "/projects/lumberjack": {
      "filePath": "projects/lumberjack.tsx",
      "parent": "/projects"
    },
    "/projects/minesweeper": {
      "filePath": "projects/minesweeper.tsx",
      "parent": "/projects"
    }
  }
}
ROUTE_MANIFEST_END */
